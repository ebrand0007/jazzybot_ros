<?xml version="1.0"?>
<launch>

  <!--copied from linobot/bringup.launch /opt/ros/indigo/share/linorobot/launch/bringup.launch -->
  <!--serial communication between arduino and pc via usb /-->
  <node name="arduino_serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
    <param name="port" value="/dev/linobase" />
    <param name="baud" value="57600" />
  </node>



 <node pkg="ros_arduino_imu" type="raw_imu_bridge_node" name="raw_imu_bridge" output="screen" respawn="false">
   <rosparam>
   imu/gyroscope_bias: {x: -0.013545, y: 0.056887, z: 0.012693 }
   imu/accelerometer_bias: {x: -0.422578, y: 0.053516, z: -0.310391 }
    </rosparam>
   <param name="imu/perform_calibration" value="false" />
 </node>



  <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
    <param name="fixed_frame" value="odom" />
  </node>

  <node name="lino_base_node" pkg="linorobot" type="lino_base_node"></node>



  <include file="$(find freenect_launch)/launch/freenect.launch">
     <arg name="depth_registration" value="True" />
  </include>



  <!--set camera_link to base_link transforms-->
  <!--http://wiki.ros.org/tf#static_transform_publisher  -->
  <!-- Publish a static coordinate transform frame (tf) using an x/y/z offset in meters and yaw/pitch/roll in radians. 
                 Last arg is The period, in milliseconds, specifies how often to send a transform. 100ms (10hz) is a good value. -->
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_camera_link" args=".381 0 .343 0 0 0 base_link camera_link 100"/>




  <!--arg name="rate"  default="5"/-->
  <!--arg name="decimation"  default="1"/--> <!-- Reduce the image size, e.g., 2 means "width/2 x height/2". -->
  <!-- Use same nodelet used by Freenect/OpenNI >
  <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle camera_nodelet_manager" output="screen">
      <param name="rate" type="double" value="$(arg rate)"/>
      <param name="decimation" type="int" value="$(arg decimation)"/>

      <remap from="rgb/image_in"       to="rgb/image_rect_color"/>
      <remap from="depth/image_in"     to="depth_registered/image_raw"/>
      <remap from="rgb/camera_info_in" to="rgb/camera_info"/>

      <remap from="rgb/image_out"       to="data_throttled_image"/>
      <remap from="depth/image_out"     to="data_throttled_image_depth"/>
      <remap from="rgb/camera_info_out" to="data_throttled_camera_info"/>
    </node>
  </group-->      

  <group ns="rtabmap">
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="--delete_db_on_start --udebug">
      <remap from="odom" to="odom"/>

      <!--rgb_topic:=/camera/data_throttled_image depth_topic:=/camera/data_throttled_image_depth 
           camera_info_topic:=/camera/data_throttled_camera_info compressed:=true rviz:=true rtabmapviz:=false-->
      <!--Throtteling from above-->
      <!--param name="rgb_topic" value="/camera/data_throttled_image"/>
      <param name="depth_topic" value="/camera/data_throttled_image_depth"/>
      <param name="camera_info_topic" value="/camera/data_throttled_camera_info"/>
      <param name="compressed" value="true"/-->
      <remap from="rgb/image" to="/camera/rgb/image_rect_color"/>
      <remap from="depth/image" to="/camera/depth_registered/image_raw"/>
      <remap from="rgb/camera_info" to="/camera/rgb/camera_info"/>
      
      <param name="frame_id" type="string" value="base_link"/>
      <param name="subscribe_depth" type="bool" value="true"/>
      <param name="queue_size" type="int" value="10"/>
      <param name="gen_scan" value="true"/> <!--Generate laser scans from depth images 
                                                (using the middle horizontal line of the depth image)-->
      <param name="rtabmapviz" value="true"/>

      <!-- RTAB-Map's parameters -->
      <param name="RGBD/AngularUpdate" type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate" type="string" value="0.01"/>
      <param name="Rtabmap/TimeThr" type="string" value="700"/>
      <param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>
    </node>
  </group>


</launch>
