<launch>
    <!--Linobot bringup-->
        <!--Lino serial communication between arduino and pc via usb /-->
        <node name="arduino_serial_node" pkg="rosserial_python" type="serial_node.py" output="screen">
            <param name="port" value="/dev/linobase" />
            <param name="baud" value="57600" />
        </node>

        <!--Lino IMU /-->
        <node pkg="ros_arduino_imu" type="raw_imu_bridge_node" name="raw_imu_bridge" output="screen" respawn="false">
            <rosparam>
                imu/gyroscope_bias: {x: -0.013545, y: 0.056887, z: 0.012693 }
                imu/accelerometer_bias: {x: -0.422578, y: 0.053516, z: -0.310391 }
            </rosparam>
            <param name="imu/perform_calibration" value="false" />
        </node>
        <node pkg="imu_filter_madgwick" type="imu_filter_node" name="imu_filter_madgwick" output="screen" respawn="false" >
            <param name="fixed_frame" value="odom" />
        </node>
        
        <!-- Lino base -->
        <node name="lino_base_node" pkg="linorobot" type="lino_base_node">
        </node>

    <!-- Kinect launch -->
        <include file="$(find freenect_launch)/launch/freenect.launch">
            <arg name="depth_registration" value="true" />
        </include>
   

    <!-- Kinect cloud to laser scan -->
        <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
            <remap from="image"     to="/camera/depth_registered/image_raw"/>
            <remap from="camera_info" to="/camera/depth_registered/camera_info"/>
            <remap from="scan" to="/kinect_scan"/>
            <param name="range_max" type="double" value="4"/>
        </node>
    
    <!--remap transforms -->
        <!--node pkg="tf" type="static_transform_publisher" name="kinect_base_broadcaster" args="0 0 0 0 0 0 /openni_depth_frame /base_link 100" /-->
        <node pkg="tf" type="static_transform_publisher" name="kinect_base_broadcaster" args="0 0 -.3 0 0 0 /camera_depth_frame /base_link 100" />
        <node pkg="tf" type="static_transform_publisher" name="base_odom_broadcaster" args="0 0 0 0 0 0 /base_link /odom 100" />
</launch>
